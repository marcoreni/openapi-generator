/*
 * OpenAPI Echo
 * This spec is to test issue 910
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;

/**
 * Echo
 */

public class Echo {
  @JsonProperty("test_string")
  private String testString = null;

  @JsonProperty("test_date")
  private OffsetDateTime testDate = null;

  public Echo testString(String testString) {
    this.testString = testString;
    return this;
  }

   /**
   * Get testString
   * @return testString
  **/
  @ApiModelProperty(value = "")
  public String getTestString() {
    return testString;
  }

  public void setTestString(String testString) {
    this.testString = testString;
  }

  public Echo testDate(OffsetDateTime testDate) {
    this.testDate = testDate;
    return this;
  }

   /**
   * Get testDate
   * @return testDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getTestDate() {
    return testDate;
  }

  public void setTestDate(OffsetDateTime testDate) {
    this.testDate = testDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Echo echo = (Echo) o;
    return Objects.equals(this.testString, echo.testString) &&
        Objects.equals(this.testDate, echo.testDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(testString, testDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Echo {\n");
    
    sb.append("    testString: ").append(toIndentedString(testString)).append("\n");
    sb.append("    testDate: ").append(toIndentedString(testDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

